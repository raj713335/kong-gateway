version: '3.9'

x-kong-config:
  &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-postgres}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: kong-database
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD: mykongpassword

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  kong-net:
    external: false
    ipam:
      config:
        - subnet: 172.1.1.0/24

services:
  kong-migrations:
    image: kong:3.7.1
    command: kong migrations bootstrap
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  kong-migrations-up:
    image: kong:3.7.1
    command: kong migrations up && kong migrations finish
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  kong:
    image: kong:3.7.1
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000, 0.0.0.0:8443 ssl}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_ADMIN_GUI_LISTEN: "${KONG_ADMIN_GUI_LISTEN:-0.0.0.0:8002}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_TRACING_INSTRUMENTATIONS: "request"
    networks:
      - kong-net
    ports:
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:8000:8000/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
      - "127.0.0.1:8002:8002/tcp"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
    security_opt:
      - no-new-privileges

  konga_web:
    image: pantsel/konga
    container_name: konga_web
    ports:
      - 1337:1337
    networks:
      - kong-net
    environment:
      NODE_ENV: development
      TOKEN_SECRET: secret
    depends_on:
      - kong

  kong-database:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-mykongpassword}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "${KONG_PG_DATABASE:-kong}",
          "-U",
          "${KONG_PG_USER:-kong}"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - kong-net

  elasticsearch:
    image: elasticsearch:8.11.3
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx1024m
      - discovery.type=single-node
    networks:
      kong-net:
        ipv4_address: 172.1.1.21

  kibana:
    image: kibana:8.11.3
    container_name: kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    networks:
      kong-net:
        ipv4_address: 172.1.1.22

  logstash:
    image: logstash:8.11.3
    container_name: logstash
    restart: unless-stopped
    ports:
      - "5555:5555/udp"
      - "5044:5044"
      - "9600:9600"
    volumes:
      - "./logstash/:/usr/share/logstash/pipeline/"
    environment:
      - MONITORING_ENABLED=false
    networks:
      kong-net:
        ipv4_address: 172.1.1.23

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - kong-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - kong-net


